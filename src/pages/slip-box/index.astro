---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// Get all notes and organize by folder
const allNotes = await getCollection('notes');

// Group notes by their folder structure
const notesByFolder = allNotes.reduce((acc, note) => {
  const parts = note.id.split('/');
  const folder = parts.length > 1 ? parts[0] : 'root';

  if (!acc[folder]) {
    acc[folder] = [];
  }
  acc[folder].push(note);
  return acc;
}, {} as Record<string, typeof allNotes>);

// Sort notes within each folder alphabetically
Object.keys(notesByFolder).forEach(folder => {
  notesByFolder[folder].sort((a, b) => {
    const titleA = a.data.title || a.id;
    const titleB = b.data.title || b.id;
    return titleA.localeCompare(titleB);
  });
});

const folderNames = {
  'permanent-notes': 'Permanent Notes',
  'literature-notes': 'Literature Notes',
  'reference-notes': 'Reference Notes',
  'writing-bin': 'Writing Bin',
};

// Define the order of folders
const folderOrder = ['permanent-notes', 'literature-notes', 'reference-notes', 'writing-bin'];
const orderedFolders = folderOrder.filter(folder => notesByFolder[folder]);
---

<BaseLayout title="Slip-Box - Paul's Second Brain" description="My slip-box: a collection of reference notes, literature notes, and permanent notes.">
  <div class="notes-header">
    <h1>Slip-Box</h1>
    <p class="intro">
      This is my slip-boxâ€”a Zettelkasten system for organizing thoughts and ideas.
      Notes are categorized into reference notes (highlights from sources), literature notes
      (ideas explained in my own words), and permanent notes (original thoughts and connections).
    </p>
  </div>

  <div class="index-section">
    <h2>Entrance to Permanent Notes</h2>
    <div class="index-content">
      <p>Here lies the index to my permanent notes:</p>
      <ul class="index-list">
        <li><a href="/slip-box/permanent-notes/1a entry to creativity">1a entry to creativity</a></li>
        <li><a href="/slip-box/permanent-notes/2a entry to productivity">2a entry to productivity</a>
          <ul>
            <li><a href="/slip-box/permanent-notes/2a1 can remote work be productive">2a1 can remote work be productive</a></li>
          </ul>
        </li>
        <li><a href="/slip-box/permanent-notes/3a thinking creatively">3a thinking creatively</a></li>
      </ul>
      <p class="index-reference">Reference: <a href="/slip-box/reference-notes/Zettelkasten Method">Zettelkasten Method</a></p>
      <div class="index-questions">
        <p><strong>Try to answer the following questions in order to convert fleeting notes into permanent notes:</strong></p>
        <ul>
          <li>How does this fact fit into my idea of a framework or topic?</li>
          <li>How can this phenomenon be explained by that framework or theory?</li>
          <li>Are these two ideas contradictory or they compliment each other?</li>
          <li>Have I heard of this before? Link it to that</li>
          <li><strong>What does x mean for y</strong></li>
        </ul>
      </div>
    </div>
  </div>

  <div class="notes-sections">
    {orderedFolders.map((folder) => {
      const notes = notesByFolder[folder];
      return (
        <section class="notes-folder">
          <h2 class="folder-title">{folderNames[folder]}</h2>
          <p class="folder-count">{notes.length} {notes.length === 1 ? 'note' : 'notes'}</p>

        <ul class="notes-list">
          {notes.map((note) => {
            const slug = note.id;
            const title = note.data.title || note.id.split('/').pop()?.replace('.md', '') || 'Untitled';

            return (
              <li class="note-item">
                <a href={`/slip-box/${slug}`} class="note-link">
                  <span class="note-title">{title}</span>
                  {note.data.tags.length > 0 && (
                    <div class="note-tags">
                      {note.data.tags.slice(0, 3).map(tag => (
                        <span class="tag">{tag}</span>
                      ))}
                      {note.data.tags.length > 3 && (
                        <span class="tag-more">+{note.data.tags.length - 3}</span>
                      )}
                    </div>
                  )}
                </a>
              </li>
            );
          })}
        </ul>
      </section>
      );
    })}
  </div>

  {Object.keys(notesByFolder).length === 0 && (
    <p class="empty-state">No notes found. Start taking notes to build your slip-box!</p>
  )}
</BaseLayout>

<style>
  .notes-header {
    margin-bottom: var(--spacing-xl);
  }

  .notes-header h1 {
    margin-bottom: var(--spacing-md);
  }

  .intro {
    font-size: 1.1rem;
    color: var(--color-text-secondary);
    line-height: 1.6;
    max-width: 600px;
  }

  .index-section {
    margin-bottom: var(--spacing-xl);
    padding: var(--spacing-lg);
    background-color: var(--color-bg-secondary);
    border-radius: var(--border-radius);
    border-left: 4px solid var(--color-accent-sage);
  }

  .index-section h2 {
    margin-top: 0;
    color: var(--color-accent-sage);
    font-size: 1.5rem;
  }

  .index-content p {
    color: var(--color-text-secondary);
    margin-bottom: var(--spacing-md);
  }

  .index-list {
    padding-left: var(--spacing-lg);
    margin-bottom: var(--spacing-md);
  }

  .index-list li {
    margin-bottom: var(--spacing-xs);
  }

  .index-list a {
    font-family: var(--font-heading);
    font-weight: 500;
  }

  .index-list ul {
    margin-top: var(--spacing-xs);
    padding-left: var(--spacing-lg);
  }

  .index-reference {
    font-style: italic;
    color: var(--color-text-secondary);
    margin-bottom: var(--spacing-lg);
  }

  .index-questions {
    padding: var(--spacing-md);
    background-color: var(--color-bg-primary);
    border-radius: var(--border-radius);
    border: 1px solid var(--color-border);
  }

  .index-questions p {
    margin-top: 0;
  }

  .index-questions ul {
    margin-bottom: 0;
    padding-left: var(--spacing-lg);
  }

  .index-questions li {
    margin-bottom: var(--spacing-xs);
    color: var(--color-text-secondary);
  }

  .notes-sections {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xl);
  }

  .notes-folder {
    padding: var(--spacing-lg);
    background-color: var(--color-bg-secondary);
    border-radius: var(--border-radius);
    border: 1px solid var(--color-border);
  }

  .folder-title {
    margin: 0 0 var(--spacing-xs) 0;
    font-size: 1.5rem;
    color: var(--color-accent-sage);
  }

  .folder-count {
    margin: 0 0 var(--spacing-md) 0;
    font-family: var(--font-heading);
    font-size: 0.9rem;
    color: var(--color-text-secondary);
  }

  .notes-list {
    list-style: none;
    padding: 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: var(--spacing-sm);
  }

  .note-item {
    margin: 0;
  }

  .note-link {
    display: block;
    padding: var(--spacing-sm);
    background-color: var(--color-bg-primary);
    border-radius: var(--border-radius);
    border: 1px solid var(--color-border);
    transition: all 0.2s ease;
  }

  .note-link:hover {
    border-color: var(--color-accent-sage);
    transform: translateY(-2px);
    box-shadow: 0 2px 8px rgba(123, 158, 137, 0.1);
  }

  .note-title {
    display: block;
    font-family: var(--font-heading);
    font-size: 0.95rem;
    font-weight: 500;
    color: var(--color-text-primary);
    margin-bottom: var(--spacing-xs);
  }

  .note-tags {
    display: flex;
    gap: 4px;
    flex-wrap: wrap;
  }

  .tag {
    font-family: var(--font-heading);
    font-size: 0.7rem;
    padding: 0.2em 0.4em;
    background-color: var(--color-bg-secondary);
    color: var(--color-text-secondary);
    border-radius: 2px;
  }

  .tag-more {
    font-family: var(--font-heading);
    font-size: 0.7rem;
    color: var(--color-text-secondary);
  }

  .empty-state {
    text-align: center;
    color: var(--color-text-secondary);
    font-style: italic;
    margin: var(--spacing-xl) 0;
  }

  @media (max-width: 640px) {
    .notes-list {
      grid-template-columns: 1fr;
    }
  }
</style>
