"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7687],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>a});var s=r(96540);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}},88944:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"slip-box/reference-notes/Git Basics","title":"Git Basics","description":"Clone single branch from repo","source":"@site/docs/slip-box/reference-notes/Git Basics.md","sourceDirName":"slip-box/reference-notes","slug":"/slip-box/reference-notes/Git Basics","permalink":"/docs/slip-box/reference-notes/Git Basics","draft":false,"unlisted":false,"editUrl":"https://github.com/paulliwali/paulliwali.github.io/tree/main/docs/docs/slip-box/reference-notes/Git Basics.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Get Started with Roam","permalink":"/docs/slip-box/reference-notes/Get Started with Roam"},"next":{"title":"Good Coding Practice","permalink":"/docs/slip-box/reference-notes/Good Coding Practice"}}');var t=r(74848),i=r(28453);const c={},a=void 0,o={},l=[];function d(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Clone single branch from repo"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone -b <branch name> --single-branch <repo-url> <folder name>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Fetch another remote branch after a single-branch clone"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git remote set-branches --add origin <remote-branch-name>\ngit fetch origin <remote-branch-name>:<local-branch-name>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Squash and interactive rebase (can ",(0,t.jsx)(n.code,{children:"pick"}),", ",(0,t.jsx)(n.code,{children:"squash"})," or ",(0,t.jsx)(n.code,{children:"reword"})," individual commits)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Rebase from current branch\ngit rebase -i HEAD~[number of commits]\n\n# Rebase from a different branch\ngit checkout <main-branch-name>\ngit pull origin\ngit checkout <dev-branch-name>\ngit rebase -i <main-branch-name>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Force push to remote branch to overwrite history"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git push origin <branch-name> --force\n"})}),"\n",(0,t.jsx)(n.p,{children:"Force pull to local branch overwrite history"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git fetch --all  # update all branches\ngit checkout -b backup-master\ngit reset --hard origin/master\n"})}),"\n",(0,t.jsx)(n.p,{children:"Undo commits"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# soft is reversible\ngit reset --soft HEAD~n\n# hard is irreversible\ngit reset --hard HEAD~n\n"})}),"\n",(0,t.jsx)(n.p,{children:"Check diff between current and history"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git show HEAD~1\ngit show <COMMIT>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Go to a specific commit and be in a detached state"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git checkout -b <new-branch-name> <SHA1>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["One-liner git log alias to ",(0,t.jsx)(n.code,{children:"git prettylog"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'git config --global alias.prettylog "log --all --decorate --oneline --graph"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);