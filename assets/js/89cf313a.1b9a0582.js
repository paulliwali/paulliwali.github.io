"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[19657],{77396:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>a});var s=i(85893),l=i(11151);const t={},r="Introduction to database",d={id:"code/notes",title:"notes",description:"- Watching video from freeCodeCamp",source:"@site/docs/code/notes.md",sourceDirName:"code",slug:"/code/notes",permalink:"/docs/code/notes",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/code/notes.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Kubernetes Snippets",permalink:"/docs/code/kube"},next:{title:"Python Basics",permalink:"/docs/code/py-basic"}},o={},a=[{value:"Create Tables",id:"create-tables",level:2},{value:"Updating and Deleting Tables",id:"updating-and-deleting-tables",level:2},{value:"Queries",id:"queries",level:2},{value:"Operations",id:"operations",level:2},{value:"ER Diagrams",id:"er-diagrams",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Watching ",(0,s.jsx)(n.a,{href:"https://www.youtube.com/watch?v=HXV3zeQKqGY",children:"video"})," from freeCodeCamp"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"introduction-to-database",children:"Introduction to database"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A database management system (DBMS) is used to manage databases","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Including MS SQL, MYSQL, PostgreSQL (object oriented), Oracle, SQLite"}),"\n",(0,s.jsx)(n.li,{children:"Perform CRUD"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Two main types of databases are ",(0,s.jsx)(n.strong,{children:"relational (SQL) and non-relational (noSQL)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Relational DB organizes data in tables"}),"\n",(0,s.jsx)(n.li,{children:"Non-relational DB organizes data into key-value pairs, json, XML, graphs, or flexible tables"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Relational DBMS include mySQL, Oracle, postgreSQL","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Uses ",(0,s.jsx)(n.strong,{children:"structured query language (SQL)"})," to interact"]}),"\n",(0,s.jsx)(n.li,{children:"SQL code is not always portable to another RDBMS"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Non-relational DBMS include mongoDB, apache cassandra, firebase","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"No set language to interact with all NRDBMS because they are implemented differently"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"tables-and-keys",children:"Tables and Keys"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Tables should have","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Column(s) which defines a property"}),"\n",(0,s.jsx)(n.li,{children:"Row(s) which defines an entry"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Primary key"})," which uniquely defines the rows of the database, see ",(0,s.jsx)(n.strong,{children:"index"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.strong,{children:"surrogate key"})," is not mapped to anything"]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.strong,{children:"natural key"})," is mapped to some real world meaning"]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.strong,{children:"foreign key"})," is mapped to another table's primary key in the DB"]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.strong,{children:"composite key"})," is comprised of multiple columns when used in conjunction uniquely identifies the row"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"sql-basics",children:"SQL Basics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SQL implementation is different across different RDBMS but shares the core concepts"}),"\n",(0,s.jsxs)(n.li,{children:["A hybrid language that combines data query language (DQL), data definition language (DDL), data control language (DCL), data manipulation language (DML)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["DQL is used to query for information","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["To get the ",(0,s.jsx)(n.em,{children:"exact"})," information that you want and ",(0,s.jsx)(n.em,{children:"nothing more"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"DDL is used to define schemas"}),"\n",(0,s.jsx)(n.li,{children:"DCL is used to control access and manage security"}),"\n",(0,s.jsx)(n.li,{children:"DML is used to for C(R)UD operations"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Syntax convention to write SQL keywords in all caps"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"create-tables",children:"Create Tables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["First thing is to define a schema","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"INT"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DECIMAL(M,N)"}),": M total digits, N digits after decimal"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"VARCHAR(l)"}),": String of text with l length"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BLOB:"})," binary large objects"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DATE"}),": 'YYYY-MM-DD'"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TIMESTAMP"}),": 'YYYY-MM-DD HH:MM",":SS","'"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Columns can have ",(0,s.jsx)(n.strong,{children:"constraints"})," to help with incomplete information","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If column should be ",(0,s.jsx)(n.code,{children:"NULL"})," or ",(0,s.jsx)(n.code,{children:"NOT NULL"})]}),"\n",(0,s.jsxs)(n.li,{children:["If column should be ",(0,s.jsx)(n.code,{children:"UNIQUE"})]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"DEFAULT"})," value if nothing is entered"]}),"\n",(0,s.jsxs)(n.li,{children:["Primary key can be ",(0,s.jsx)(n.code,{children:"AUTO_INCREMENT"})," which is useful for integer primary keys"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FOREIGN KEY"})," to add the foreign key","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"To add values in foreign key columns, they have to already exist in order to be referenced"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ON DELETE SET NULL"})," and ",(0,s.jsx)(n.code,{children:"ON DELETE SET CASCADE"})," to take care of what happens to foreign keys"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"updating-and-deleting-tables",children:"Updating and Deleting Tables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"UPDATE"}),"... ",(0,s.jsx)(n.code,{children:"SET"}),"... ",(0,s.jsx)(n.code,{children:"WHERE"}),"...","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Update column(s) of specific row(s) that pass the condition(s)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DELETE FROM"}),"... ",(0,s.jsx)(n.code,{children:"WHERE"}),"...","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Delete row(s) that pass the condition(s)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"queries",children:"Queries"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"SELECT"}),"... ",(0,s.jsx)(n.code,{children:"FROM"}),"...","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"to retrieve the columns"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LIMIT"})," is used to filter the number of rows that is returned"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"WHERE"})," is used to construct filters","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Can get complex using boolean comparisons: ",(0,s.jsx)(n.code,{children:"<, >, <=, >=, =, <>, AND, OR"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"IN"})," is used to make 1-to-many comparisons"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Wildcards include ",(0,s.jsx)(n.code,{children:"%"})," for any number of characters and ",(0,s.jsx)(n.code,{children:"_"})," for one character"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"operations",children:"Operations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"UNION"})," combines rows from tables","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"They have to have the same data type and dimensions"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"JOIN"})," combines columns from tables","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"They have to share key columns"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"er-diagrams",children:"ER Diagrams"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Entity"})," is an object to model about","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Weak entity"})," is an entity that can't be uniquely identified by its attributes, will depend on another entity - ",(0,s.jsx)(n.em,{children:"thus full participation on the entity"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"})," info about the entry","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Composite attributes"})," can be broken into sub-attributes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-valued attributes"})," can have more than one value (double outline)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Derived attributes"}),' are "calculated" from other attributes (dashed outline)']}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"})," defines a connection between two entities","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationship attribute"})," are defined only on the relationship"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationship cardinality"})," are 1-to-1, 1-to-many, many-to-many"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Converting ER diagrams to schema:","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Map regular entity types to tables with entities as columns"}),"\n",(0,s.jsx)(n.li,{children:"Map weak entity types with composite key of primary key of owner and itself"}),"\n",(0,s.jsx)(n.li,{children:"Map binary 1-to-1 relationships by including one side of the relationship's primary key as foreign keys in favor of total participation"}),"\n",(0,s.jsx)(n.li,{children:'Map binary 1-to-many relationships by including one side of the relationship\'s primary key as foreign keys on the "many" side'}),"\n",(0,s.jsx)(n.li,{children:"Map binary many-to-many relationships by creating a new table with composite key with primary key of both sides and any attributes"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>r});var s=i(67294);const l={},t=s.createContext(l);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);