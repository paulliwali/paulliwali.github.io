"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[55824],{79997:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=n(85893),s=n(11151);const r={},o=void 0,a={id:"slip-box/reference-notes/Split training and testing",title:"Split training and testing",description:"[[k-fold cross validation]] improves on the standard 1-fold train test split which can result in lucky splits. This gives confidence in the model design and tuning of hyperparameters.",source:"@site/docs/slip-box/reference-notes/Split training and testing.md",sourceDirName:"slip-box/reference-notes",slug:"/slip-box/reference-notes/Split training and testing",permalink:"/docs/slip-box/reference-notes/Split training and testing",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/slip-box/reference-notes/Split training and testing.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Speed is the killer feature",permalink:"/docs/slip-box/reference-notes/Speed is the killer feature"},next:{title:"About",permalink:"/docs/slip-box/reference-notes/StableAuto"}},c={},l=[];function d(e){const t={p:"p",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"[[k-fold cross validation]] improves on the standard 1-fold train test split which can result in lucky splits. This gives confidence in the model design and tuning of hyperparameters."}),"\n",(0,i.jsx)(t.p,{children:"Other ways of cross validation methods include stratified k fold which will split out each class with a constant percentage. Time series split which is useful for training time series data where we don't see the future."})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>o});var i=n(67294);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);