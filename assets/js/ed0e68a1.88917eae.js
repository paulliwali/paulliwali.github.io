"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[49349],{16129:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"daily-notes/2020/2020-12-17","title":"2020-12-17","description":"- \u2600\ufe0fDaily Log:","source":"@site/docs/daily-notes/2020/2020-12-17.md","sourceDirName":"daily-notes/2020","slug":"/daily-notes/2020/2020-12-17","permalink":"/docs/daily-notes/2020/2020-12-17","draft":false,"unlisted":false,"editUrl":"https://github.com/paulliwali/paulliwali.github.io/tree/main/docs/docs/daily-notes/2020/2020-12-17.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"2020-12-15","permalink":"/docs/daily-notes/2020/2020-12-15"},"next":{"title":"2020-12-18","permalink":"/docs/daily-notes/2020/2020-12-18"}}');var i=t(74848),r=t(28453);const l={},o=void 0,a={},c=[];function d(e){const n={a:"a",li:"li",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2600\ufe0fDaily Log:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Presented to the broad team for the first time","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Was very stressed about it all night, didn't have a good sleep"}),"\n",(0,i.jsx)(n.li,{children:"The key is to keep it simple, logical and have some light/funny anecdotes to bring it close to reality"}),"\n",(0,i.jsx)(n.li,{children:"Good feedback from the team"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["10 Common Software Patterns in a nutshell #article #programming #lists","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["source: ",(0,i.jsx)(n.a,{href:"https://towardsdatascience.com/10-common-software-architectural-patterns-in-a-nutshell-a0b47a1e9013",children:"https://towardsdatascience.com/10-common-software-architectural-patterns-in-a-nutshell-a0b47a1e9013"})]}),"\n",(0,i.jsxs)(n.li,{children:["Architectural pattern is a ",(0,i.jsx)(n.strong,{children:"general, reusable solution to a commonly occurring problem in software architecture within a given context"})]}),"\n",(0,i.jsxs)(n.li,{children:["Layered Pattern","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For programs that can be decomposed into groups of subtasks, each group is abstracted to a layer"}),"\n",(0,i.jsx)(n.li,{children:"Consists of: presentation layer (UI), application Layer (service), business logic layer (domain), data Access Layer (persistence)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Client-server Pattern","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For programs that can be broken into server and multiple clients"}),"\n",(0,i.jsx)(n.li,{children:"The server provides services to the clients and listens for requests"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Master-slave Pattern","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For programs that can have the work distributed by the master to identical slave components, then collected back to compute the final result"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pipe-filter Pattern","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For programs that produce and process a stream of data"}),"\n",(0,i.jsx)(n.li,{children:"Each processing step is enclosed within a filter component"}),"\n",(0,i.jsx)(n.li,{children:"Data to be processed is passed through pipes, which is used for buffering or synchronization"}),"\n",(0,i.jsx)(n.li,{children:"Compliers or bioinformatics programs might use this"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Broker Pattern","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For distributed systems with decoupled components, the components interact via the broker. Examples include Apache Kafka"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Peer-to-peer Pattern","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The peers in this pattern are components that can act both as clients or servers"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Event-bus Pattern","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"This typically has 4 components: event source, event listener, channel and event bus"}),"\n",(0,i.jsx)(n.li,{children:"The source publish messages to particular channels on an event bus"}),"\n",(0,i.jsx)(n.li,{children:"Listeners will subscribe to channels on the event bus and be notified of the messages that are published to a channel"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Model-view-controller Pattern","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Interactive applications use this pattern which divides into 3 parts: model (core functionality and data), view (display the information), controller (handles inputs from the user)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Blackboard Pattern","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Suited for programs with no known deterministic solution strategy"}),"\n",(0,i.jsx)(n.li,{children:"Contains 3 components: blackboard (a structured global memory containing object), knowledge source (specialized modules with their own representation) and control (selects, configures and executes modules)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Interpreter Pattern","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For programs that interpret other programs written in a dedicated language"}),"\n",(0,i.jsx)(n.li,{children:"SQL is an example of this"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["#article The Onion Architecture","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Source: ",(0,i.jsx)(n.a,{href:"https://jeffreypalermo.com/2008/07/the-onion-architecture-part-1/",children:"https://jeffreypalermo.com/2008/07/the-onion-architecture-part-1/"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Retrospective::","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"One week ago: [[December 10th, 2020]]"}),"\n",(0,i.jsx)(n.li,{children:"One month ago: [[November 17th, 2020]]"}),"\n",(0,i.jsx)(n.li,{children:"One quarter ago: [[September 17th, 2020]]"}),"\n",(0,i.jsx)(n.li,{children:"One year ago: [[December 17th, 2019]]"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Daily Stoic::","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Know yourself before it is too late, being self-aware is important life skill"}),"\n"]}),"\n"]}),"\n"]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(96540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);