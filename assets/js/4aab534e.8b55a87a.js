"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[54107],{21231:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var a=n(85893),s=n(11151);const i={},o="SQL Snippets",r={id:"code/sql-snippets",title:"SQL Snippets",description:"Composite table elements for better sub-queries",source:"@site/docs/code/sql-snippets.md",sourceDirName:"code",slug:"/code/sql-snippets",permalink:"/docs/code/sql-snippets",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/code/sql-snippets.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python Data Science",permalink:"/docs/code/py-data-science"},next:{title:"tmux-sinppets",permalink:"/docs/code/tmux-sinppets"}},c={},l=[{value:"Time related",id:"time-related",level:2},{value:"Partitions",id:"partitions",level:2}];function m(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"sql-snippets",children:"SQL Snippets"}),"\n",(0,a.jsx)(t.p,{children:"Composite table elements for better sub-queries"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-SQL",children:"WITH sub_table_name AS (\n SELECT *\n FROM db.table\n), sub_table_name_2 as (\n SELECT *\n FROM db.table\n)\nSELECT *\nFROM sub_table_name\nWHERE key == value\nLEFT JOIN sub_table_name\nON sub_table_name.col_name = sub_table_name.col_name\nLEFT JOIN sub_table_name_2\nON sub_table_name.col_name = sub_table_name_2.col_name\n"})}),"\n",(0,a.jsx)(t.p,{children:"Anti Join"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-SQL",children:"SELECT *\nFROM table_left\nLEFT JOIN table_right\nON table_left.col_name = table_right.col_name\nWHERE table_right.val_col IS NULL\n"})}),"\n",(0,a.jsx)(t.p,{children:"Pivot from long to wide"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-SQL",children:"SELECT\n group_col_name,\n MAX(CASE WHEN metric_name = 'val_name_a' THEN metric_value END) AS val_name_a,\n MAX(CASE WHEN metric_name = 'val_name_b' THEN metric_value END) as val_name_b\nFROM table_name\nGROUP BY group_col_name\n"})}),"\n",(0,a.jsx)(t.h2,{id:"time-related",children:"Time related"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-SQL",children:"-- Convert datetime\nFROM_UNIXTIME(timestamp_epoch_ms / 1000, 'UTC') as utc_timestamp\nFROM_UNIXTIME(timestamp_epoch_ms / 1000, timezone_col) as local_timestamp\n\n-- Not[[py-data-science]]e, that dBeaver might not print it with the timezone conversion, to show it you need to\nCAST(DATE(utc_timestamp) AS varchar) as utc_date,\n\n-- Convert to epoch ms\nCAST(to_unixtime(resampled_timestamp_s) AS bigint) as epoch_ms\n\n-- Get hour\nHOUR(CAST(datetime_str as timestamp))\nHOUR(utc_timestamp) as utc_hour\nHOUR(local_timestamp) as local_hour\n\n-- Truncate datetime to month\nDATE_TRUNC('month', CAST(event_dt as timestamp))\n"})}),"\n",(0,a.jsx)(t.h2,{id:"partitions",children:"Partitions"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-SQL",children:"-- rank\nSELECT orderkey, clerk, totalprice,\n rank() OVER (PARTITION BY clerk\n    ORDER BY totalprice DESC) as rnk\nFROM orders\nORDER BY clerk, rnk\n"})})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>o});var a=n(67294);const s={},i=a.createContext(s);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);