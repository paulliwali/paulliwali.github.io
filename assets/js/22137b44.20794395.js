"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[40549],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(r),f=n,d=c["".concat(s,".").concat(f)]||c[f]||m[f]||i;return r?a.createElement(d,l(l({ref:t},p),{},{components:r})):a.createElement(d,l({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:n,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},49210:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=r(87462),n=(r(67294),r(3905));const i={},l=void 0,o={unversionedId:"slip-box/reference-notes/Software 2.0",id:"slip-box/reference-notes/Software 2.0",title:"Software 2.0",description:"\u2317 Metadata",source:"@site/docs/slip-box/reference-notes/Software 2.0.md",sourceDirName:"slip-box/reference-notes",slug:"/slip-box/reference-notes/Software 2.0",permalink:"/docs/slip-box/reference-notes/Software 2.0",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/slip-box/reference-notes/Software 2.0.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Slow Living",permalink:"/docs/slip-box/reference-notes/Slow Living"},next:{title:"Some thoughts on machine learning with small data",permalink:"/docs/slip-box/reference-notes/Some thoughts on machine learning with small data"}},s={},u=[],p={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"\u2317 Metadata"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Source: ",(0,n.kt)("a",{parentName:"li",href:"https://karpathy.medium.com/software-2-0-a64152b37c35"},"https://karpathy.medium.com/software-2-0-a64152b37c35")),(0,n.kt)("li",{parentName:"ul"},"Author: Andrej Karpathy"),(0,n.kt)("li",{parentName:"ul"},"Tags: #programming #machine-learning ")),(0,n.kt)("p",null,"\ud83d\udcf0 Summary (use your own words)"),(0,n.kt)("p",null,'There is a shift in programs that execute exact instructions line by line to programs that knows the rules and rewards and finds the "best" way to achieve this end result.'),(0,n.kt)("p",null,"\u270d\ufe0f Notes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Classical Software 1.0 stack is written in Python, C, etc",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Explicit instructions to tell the program what to do"))),(0,n.kt)("li",{parentName:"ul"},"Many still think that machine learning is ",(0,n.kt)("em",{parentName:"li"},"just")," a toolbox to find creative solutions to online challenges",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Have to fully accepted that it is not the future but ",(0,n.kt)("em",{parentName:"li"},"here already")))),(0,n.kt)("li",{parentName:"ul"},"Software 2.0 is written in an abstract, human-unreadible language",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},'Also known as "black-box" program'),(0,n.kt)("li",{parentName:"ul"},"Consists of:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"datasets that defines the desired outcomes"),(0,n.kt)("li",{parentName:"ul"},"architecture that defines the structure but with the details waiting for be filled in"))))),(0,n.kt)("li",{parentName:"ul"},"This is crucial to tackle future problems because there are lots of real-world problems where it is easier to collect data but very hard to define the explicit instructions to solve it",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Examples of transitioning from 1.0 to 2.0:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Visual recognition - from engineered features with bits of SVM to using convolutional neural network architectures"),(0,n.kt)("li",{parentName:"ul"},"Speech recognition - from preprocessing, gaussian mixture models, hidden markov models to entirely neural neets"),(0,n.kt)("li",{parentName:"ul"},"Speech synthesis - from stiching to large ConvNets"),(0,n.kt)("li",{parentName:"ul"},"Machine translation - from phrase based statistical techniques to weakly or unsupervised neural networks"),(0,n.kt)("li",{parentName:"ul"},"Games - from hand coded rule based to ConvNet"))))),(0,n.kt)("li",{parentName:"ul"},"Benefits of 2.0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Computationally homogeneous",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Entirely consistent of matrix multiplications and activation equation"))),(0,n.kt)("li",{parentName:"ul"},"Simple to bake into silicon",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"instruction set being much smaller it is easier to make smaller chips"))),(0,n.kt)("li",{parentName:"ul"},"Constant running time",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Each iteration of the forward pass is the same "))),(0,n.kt)("li",{parentName:"ul"},"Highly portable",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Once trained, the sequence of matrix multiplication is easy to run "))),(0,n.kt)("li",{parentName:"ul"},"Agile",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Easy to retrain and increase or decrease the speed"))))),(0,n.kt)("li",{parentName:"ul"},"Limitations of 2.0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"If debugging and explaining code was already the hardest part of 1.0, ",(0,n.kt)("strong",{parentName:"li"},"then this is infinitely harder with 2.0")),(0,n.kt)("li",{parentName:"ul"},"Silent failures or gives very wrong results"),(0,n.kt)("li",{parentName:"ul"},"How do we share, manage and deploy software 2.0?")))))}c.isMDXComponent=!0}}]);