"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[29487],{23545:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"daily-notes/2021/2021-05-20","title":"2021-05-20","description":"- Daily Log:","source":"@site/docs/daily-notes/2021/2021-05-20.md","sourceDirName":"daily-notes/2021","slug":"/daily-notes/2021/2021-05-20","permalink":"/docs/daily-notes/2021/2021-05-20","draft":false,"unlisted":false,"editUrl":"https://github.com/paulliwali/paulliwali.github.io/tree/main/docs/docs/daily-notes/2021/2021-05-20.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"2021-05-19","permalink":"/docs/daily-notes/2021/2021-05-19"},"next":{"title":"2021-05-21","permalink":"/docs/daily-notes/2021/2021-05-21"}}');var t=i(74848),r=i(28453);const l={},c=void 0,a={},o=[];function d(e){const n={code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Daily Log:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["[[How to Handle Exceptions]]","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Metadata:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"#article #programming #python"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"A typical flow may require several services and anyone of the services can break and interrupt the flow"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Instead of writing a pattern that is repeated try-except with every service like creating a class and creating a function that logs all the different errors"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Which is hard to maintain and is focused on writing the errors"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Make exceptions specific"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"raise specific errors instead of raising generic exception"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'try:\n  order_status = status_service.get_order_status(order_id)\nexcept Exception as e:\n  logger.exception("...{e}...")\n  raise e\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Mind your own business"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Don't teach classes what can go wrong, instead have multiple classes to handle each thing and then use a single try...except... block"}),"\n",(0,t.jsx)(n.li,{children:"Don't have to re-raise errors, just use raise"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class StatusService:\n  def get_order_status(order_id):\n    try:\n      pass\n    except:\n      raise CustomError() from e\n\nclass ReceiptService:\n  def create(order_id):\n    try:\n      pass\n    except:\n      raise ReceiptGenerationFailed() from e\n\nclass OrderService:\n  def emit(self, order_id: str) -> dict:\n    try:\n      # all the services in here\n    except OrderNotFound as e:\n      # handle this\n    except ReceiptGenerationFailed as e:\n      # handle this\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Better logging"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Tell don't ask"}),"\n",(0,t.jsx)(n.li,{children:"logging exceptions shouldn't need to pass the exception because it is already implicit"}),"\n",(0,t.jsx)(n.li,{children:"Let the downstream exception class to log the exact message"}),"\n",(0,t.jsxs)(n.li,{children:["Catching and raising exceptions effectively","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Instead of catching and re-raising, according to PEP3134 it is enough to just plainly raise or raising from another exception"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Logging exceptions effectively","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Don't log the exception object, use logging.exception function to handle the stack trace"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Retrospective::"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"One week ago: [[May 13th, 2021]]"}),"\n",(0,t.jsx)(n.li,{children:"One month ago: [[April 20th, 2021]]"}),"\n",(0,t.jsx)(n.li,{children:"One quarter ago: [[February 20th, 2021]]"}),"\n",(0,t.jsx)(n.li,{children:"One year ago: [[May 20th, 2020]]"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Daily Stoic::"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"When it comes to learning focus on quality over quantity, you will never read all the literature available in the world but you can benefit from reading from a few"}),"\n"]}),"\n"]}),"\n"]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(96540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);