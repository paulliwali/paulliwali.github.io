"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5556],{80159:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>a});var t=i(85893),s=i(11151);const c={},o="General Coding Principles",r={id:"code/general",title:"General Coding Principles",description:"Keys to writing clean functions",source:"@site/docs/code/general.md",sourceDirName:"code",slug:"/code/general",permalink:"/docs/code/general",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/code/general.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"bash-snippets",permalink:"/docs/code/bash-snippets"},next:{title:"Git Basics",permalink:"/docs/code/git-basics"}},l={},a=[{value:"Keys to writing clean functions",id:"keys-to-writing-clean-functions",level:2},{value:"Clean Code Practice",id:"clean-code-practice",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"general-coding-principles",children:"General Coding Principles"}),"\n",(0,t.jsx)(n.h2,{id:"keys-to-writing-clean-functions",children:"Keys to writing clean functions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"How easy would it be to unit test the function"}),"\n",(0,t.jsx)(n.li,{children:"How many lines are in a function, if it greater than 20 lines then it might be doing too many things"}),"\n",(0,t.jsx)(n.li,{children:'What are the logical steps each function is performing, if the description is "do A then B then C", then it can probably be split into 3 functions'}),"\n",(0,t.jsx)(n.li,{children:"Data fetching -> Data processing/transformation -> Data visualization"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"clean-code-practice",children:"Clean Code Practice"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"DRY Principle"}),"\n",(0,t.jsx)(n.li,{children:"Minimize entities, classes, functions"}),"\n",(0,t.jsx)(n.li,{children:"It should be readable and simple"}),"\n",(0,t.jsx)(n.li,{children:"Be testable"}),"\n",(0,t.jsx)(n.li,{children:"SOLID Principle"}),"\n",(0,t.jsx)(n.li,{children:"Careful with dependencies, should be one directional"}),"\n",(0,t.jsx)(n.li,{children:"Don't hardcode"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'redis-cli -a "my-pass" --bigkeys -n <DATABASE_NUMBER>\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>o});var t=i(67294);const s={},c=t.createContext(s);function o(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);